/*
 * The Q&A AMATI API
 * Allows the SlackBot to Interact with the QuestionWall
 *
 * OpenAPI spec version: V1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Score
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-05-30T18:00:13.799+02:00")
public class Score {
  @SerializedName("bestAnswersCount")
  private Map<String, Integer> bestAnswersCount = new HashMap<String, Integer>();

  @SerializedName("questionsCount")
  private Map<String, Integer> questionsCount = new HashMap<String, Integer>();

  @SerializedName("upvotesCount")
  private Map<String, Integer> upvotesCount = new HashMap<String, Integer>();

  @SerializedName("answerTime")
  private List<Long> answerTime = new ArrayList<Long>();

  public Score bestAnswersCount(Map<String, Integer> bestAnswersCount) {
    this.bestAnswersCount = bestAnswersCount;
    return this;
  }

  public Score putBestAnswersCountItem(String key, Integer bestAnswersCountItem) {
    this.bestAnswersCount.put(key, bestAnswersCountItem);
    return this;
  }

   /**
   * Get bestAnswersCount
   * @return bestAnswersCount
  **/
  @ApiModelProperty(example = "null", value = "")
  public Map<String, Integer> getBestAnswersCount() {
    return bestAnswersCount;
  }

  public void setBestAnswersCount(Map<String, Integer> bestAnswersCount) {
    this.bestAnswersCount = bestAnswersCount;
  }

  public Score questionsCount(Map<String, Integer> questionsCount) {
    this.questionsCount = questionsCount;
    return this;
  }

  public Score putQuestionsCountItem(String key, Integer questionsCountItem) {
    this.questionsCount.put(key, questionsCountItem);
    return this;
  }

   /**
   * Get questionsCount
   * @return questionsCount
  **/
  @ApiModelProperty(example = "null", value = "")
  public Map<String, Integer> getQuestionsCount() {
    return questionsCount;
  }

  public void setQuestionsCount(Map<String, Integer> questionsCount) {
    this.questionsCount = questionsCount;
  }

  public Score upvotesCount(Map<String, Integer> upvotesCount) {
    this.upvotesCount = upvotesCount;
    return this;
  }

  public Score putUpvotesCountItem(String key, Integer upvotesCountItem) {
    this.upvotesCount.put(key, upvotesCountItem);
    return this;
  }

   /**
   * Get upvotesCount
   * @return upvotesCount
  **/
  @ApiModelProperty(example = "null", value = "")
  public Map<String, Integer> getUpvotesCount() {
    return upvotesCount;
  }

  public void setUpvotesCount(Map<String, Integer> upvotesCount) {
    this.upvotesCount = upvotesCount;
  }

  public Score answerTime(List<Long> answerTime) {
    this.answerTime = answerTime;
    return this;
  }

  public Score addAnswerTimeItem(Long answerTimeItem) {
    this.answerTime.add(answerTimeItem);
    return this;
  }

   /**
   * Get answerTime
   * @return answerTime
  **/
  @ApiModelProperty(example = "null", value = "")
  public List<Long> getAnswerTime() {
    return answerTime;
  }

  public void setAnswerTime(List<Long> answerTime) {
    this.answerTime = answerTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Score score = (Score) o;
    return Objects.equals(this.bestAnswersCount, score.bestAnswersCount) &&
        Objects.equals(this.questionsCount, score.questionsCount) &&
        Objects.equals(this.upvotesCount, score.upvotesCount) &&
        Objects.equals(this.answerTime, score.answerTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bestAnswersCount, questionsCount, upvotesCount, answerTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Score {\n");
    
    sb.append("    bestAnswersCount: ").append(toIndentedString(bestAnswersCount)).append("\n");
    sb.append("    questionsCount: ").append(toIndentedString(questionsCount)).append("\n");
    sb.append("    upvotesCount: ").append(toIndentedString(upvotesCount)).append("\n");
    sb.append("    answerTime: ").append(toIndentedString(answerTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

